const baseStores={player:{hp:50,dmg:1,goldInit:0,gear:{weapon:{level:1,upgradeCost:10,upgradeMod:2},armor:{level:1,upgradeCost:10,upgradeMod:3}}},enemy:{hp:3,dmg:1,goldDrop:3,eliteMod:4,bossMod:3},skills:{regen:{power:10,level:1,upgradeCost:1e3,purchaseCost:1e3,costMultiplier:1.2,powerIncrease:1.75,name:"Regen"},midas:{power:100,level:1,upgradeCost:1e4,purchaseCost:1e4,costMultiplier:1.2,powerIncrease:1.75,name:"Midas"},aura:{power:1e3,level:1,upgradeCost:1e5,purchaseCost:1e5,costMultiplier:1.2,powerIncrease:1.75,name:"Aura"}},world:{wave:{num:1,perWave:10,modifier:1.5},loop:{num:1,buffInit:{},buffStats:{goldPerMonster:1,dmgModifier:1,waveReduction:.5,dmgReduction:.5,costReduction:1}}}},playerHPBar=document.getElementById("playerHPBar"),playerHPText=document.getElementById("playerCurrentHP"),playerMaxHPText=document.getElementById("playerMaxHP"),playerMessage=document.getElementById("playerMessage"),enemyHitBox=document.getElementById("enemyHitbox"),enemyHPBar=document.getElementById("enemyCurrentHP"),enemyHPText=document.getElementById("enemyHPText"),enemyMaxHPText=document.getElementById("enemyMaxHPText"),enemyGoldText=document.getElementById("enemyGold"),enemyDamageText=document.getElementById("enemyDamage"),enemyClassText=document.getElementById("enemyClass"),campfire_e=document.getElementById("campfire"),enemy_e=document.getElementById("enemy"),advanceBtn=document.getElementById("advance"),retreatBtn=document.getElementById("retreat"),nextBtn=document.getElementById("next"),counterDisplay=document.getElementById("enemyCounter"),waveCounterDisplay=document.getElementById("waveCounter"),goldDisplay=document.getElementById("goldDisplay"),weaponLvlEl=document.getElementById("weaponLvl"),weaponDMGEl=document.getElementById("weaponDMG"),weaponCostEl=document.getElementById("weaponCost"),armorLvlEl=document.getElementById("armorLvl"),armorHPEl=document.getElementById("armorHP"),armorCostEl=document.getElementById("armorCost"),weaponUpgrade=document.getElementById("weaponUpgrade"),armorUpgrade=document.getElementById("armorUpgrade"),buyRegenBtn=document.getElementById("buyRegenBtn"),buyMidasBtn=document.getElementById("buyMidasBtn"),buyAuraBtn=document.getElementById("buyAuraBtn"),upgradeRegenBtn=document.getElementById("upgradeRegenBtn"),upgradeMidasBtn=document.getElementById("upgradeMidasBtn"),upgradeAuraBtn=document.getElementById("upgradeAuraBtn"),regenCost=document.getElementById("regenCost"),midasCost=document.getElementById("midasCost"),auraCost=document.getElementById("auraCost"),regenBonusTxt=document.getElementById("regenBonus"),midasBonusTxt=document.getElementById("midasBonus"),auraBonusTxt=document.getElementById("auraBonus"),regenUpgradeCost=document.getElementById("regenUpgradeCost"),midasUpgradeCost=document.getElementById("midasUpgradeCost"),auraUpgradeCost=document.getElementById("auraUpgradeCost"),regenText=document.getElementById("regen"),midasText=document.getElementById("midas"),auraText=document.getElementById("aura");let player={...baseStores.player},enemyBase={...baseStores.enemy},party={...baseStores.party},world={...baseStores.world},skills={...baseStores.skills},isResting=!0;const weapon=player.gear.weapon,armor=player.gear.armor;let currentGold=player.goldInit,enemyMaxHP=enemyBase.hp,enemyCurrentHP=enemyBase.hp,enemyDMG=enemyBase.dmg,enemyGold=enemyBase.goldDrop,playerHP=player.hp,playerMaxHP=player.hp,waveNumber=world.wave.num,regenBonus=skills.regen.power,auraBonus=skills.aura.power,midasBonus=skills.midas.power,enemyClass="",enemyCounter=1;const addSuffix=e=>{let a=e;if(e>=1e3){const n=["","k","m","b","t","q","qn","sx","sp","o","n","d","ud","dd","td","qd","qnd","sxd","spd","od","nd","v","uv","dv","tv","qv","qnv","sxv","spv","ov","nv","tg"],t=Math.floor((""+e).length/3);let r="";for(let a=2;a>=1;a--){if(((r=parseFloat((0!=t?e/Math.pow(1e3,t):e).toPrecision(a)))+"").replace(/[^a-zA-Z 0-9]+/g,"").length<=2)break}r%1!=0&&(r=r.toFixed(1)),a=r+n[t]}return a},updateHealth=(e,a,n)=>{"player"===n?playerHP=a:enemyCurrentHP=a;const t={percent:a/e*100,maxHP:e,newHealth:a};"player"===n?playerHPDisplay(t):enemyHPDisplay(t)},playerHPDisplay=e=>{playerHPBar.style.width=e.percent+"%",playerHPText.innerHTML=addSuffix(e.newHealth),playerMaxHPText.innerHTML=addSuffix(e.maxHP)},enemyHPDisplay=e=>{enemyHPBar.style.width=e.percent+"%",enemyHPText.innerHTML=addSuffix(e.newHealth),enemyMaxHPText.innerHTML=addSuffix(e.maxHP)},updatePlayerHealth=e=>updateHealth(playerMaxHP,e,"player"),updateEnemyHealth=e=>updateHealth(enemyMaxHP,e,"enemy"),healPlayer=()=>updatePlayerHealth(playerMaxHP),toggleResting=()=>{const e=[campfire_e,enemy_e,retreatBtn,enemyHitBox];for(var a of e)toggleShow(a);isResting=!isResting},retreat=()=>{enemyCounter=1,stopEnemyAttack(),toggleShow(advanceBtn),healPlayer(),toggleResting()},advance=()=>{toggleResting(),toggleShow(advanceBtn),spawnEnemy(),startEnemyAttack()},restAtCampfire=()=>{stopEnemyAttack(),healPlayer(),toggleShow(nextBtn),playerMessage.innerHTML="Wave Cleared.",toggleResting()},nextWave=()=>{updateWaveCounter(),enemyCounter=1,displayEnemyCounter(),playerMessage.innerHTML="",toggleShow(nextBtn),toggleResting(),spawnEnemy(),startEnemyAttack()},toggleShow=e=>{e.classList.toggle("show")},spawnEnemy=()=>{setTimeout(()=>{var e=eliteModifier(enemyBase);10===enemyCounter?(enemyCurrentHP=e.hp,enemyMaxHP=enemyCurrentHP,enemyGold=e.goldDrop,enemyDMG=e.dmg,enemyClass="Elite"):(enemyCurrentHP=enemyBase.hp,enemyMaxHP=enemyCurrentHP,enemyGold=enemyBase.goldDrop,enemyDMG=enemyBase.dmg,enemyClass="Minion"),displayEnemyStats(),updateEnemyHealth(enemyCurrentHP)},150)};let enemyAttackInterval;const enemyAttack=()=>!isResting&&damagePlayer(),startEnemyAttack=()=>enemyAttackInterval=setInterval(enemyAttack,2e3),stopEnemyAttack=()=>clearInterval(enemyAttackInterval),eliteModifier=e=>{const a=e.eliteMod;return{hp:e.hp*a,dmg:e.dmg*a,goldDrop:e.goldDrop*a}},waveModifier=e=>{const a={...enemyBase,hp:Math.round(enemyBase.hp*e),dmg:Math.round(enemyBase.dmg*e),goldDrop:Math.round(enemyBase.goldDrop*e)};enemyBase=a},addGold=e=>{currentGold+=e,displayGold()},upgradeGear=(e,a)=>{currentGold>=e.upgradeCost&&(currentGold-=e.upgradeCost,e.level++,e.upgradeCost*=e.upgradeMod,a(),displayUpgrades())},upgradeWeaponDMG=()=>{upgradeGear(weapon,()=>player.dmg*=2)},upgradeArmorHP=()=>{upgradeGear(armor,()=>(playerMaxHP=Math.round(1.9*playerMaxHP),healPlayer()))},displayUpgrades=()=>(displayGold(),displayWeaponStats(),displayArmorStats()),displaySkillEffect=()=>{regenText.innerHTML=skills.regen.power,midasText.innerHTML=skills.midas.power,auraText.innerHTML=skills.aura.power},displaySkillCost=()=>{regenCost.innerHTML=addSuffix(skills.regen.purchaseCost),midasCost.innerHTML=addSuffix(skills.midas.purchaseCost),auraCost.innerHTML=addSuffix(skills.aura.purchaseCost)},displaySkillUpgrades=()=>{regenUpgradeCost.innerHTML=addSuffix(skills.regen.upgradeCost),midasUpgradeCost.innerHTML=addSuffix(skills.midas.upgradeCost),auraUpgradeCost.innerHTML=addSuffix(skills.aura.upgradeCost),regenBonusTxt.innerHTML=addSuffix(regenBonus),midasBonusTxt.innerHTML=addSuffix(midasBonus),auraBonusTxt.innerHTML=addSuffix(auraBonus)},purchaseSkill=e=>{const a=e.purchaseCost;currentGold>=a&&(currentGold-=a,displayGold(),activateSkill(e.name))},upgradeSkill=e=>{currentGold>=e.upgradeCost&&(currentGold-=e.upgradeCost,displayGold(),switchSkill(e))},activateSkill=e=>{switch(e){case"Regen":castSkill("regen",regenEffect),toggleShow(buyRegenBtn),toggleShow(upgradeRegenBtn);break;case"Aura":castSkill("aura",auraEffect),toggleShow(buyAuraBtn),toggleShow(upgradeAuraBtn);break;case"Midas":castSkill("midas",midasEffect),toggleShow(buyMidasBtn),toggleShow(upgradeMidasBtn)}displaySkillUpgrades()},switchSkill=e=>{switch(e.name){case"Regen":skillPowerIncrease(regenBonus,e);break;case"Aura":skillPowerIncrease(auraBonus,e);break;case"Midas":skillPowerIncrease(midasBonus,e)}},skillPowerIncrease=(e,a)=>{a.power=Math.round(a.power*a.powerIncrease),a.level++,a.upgradeCost=Math.round(a.upgradeCost*a.costMultiplier),a.power,displaySkillUpgrades()};let regen,aura,midas;const regenEffect=()=>{if(!isResting&&playerHP<playerMaxHP){let e=playerHP+skills.regen.power;e>playerMaxHP&&(e=playerMaxHP),updatePlayerHealth(e)}},auraEffect=()=>{if(!isResting){const e=enemyCurrentHP-skills.aura.power;e<=0?(updateEnemyHealth(enemyCurrentHP=0),killEnemy()):updateEnemyHealth(e)}},midasEffect=()=>{if(!isResting){const e=skills.midas.power;addGold(e)}},castSkill=(e,a)=>{clearInterval(e),e=setInterval(a,1e3)},displayWeaponStats=()=>{weaponLvlEl.innerHTML=weapon.level,weaponDMGEl.innerHTML=addSuffix(player.dmg),weaponCostEl.innerHTML=addSuffix(weapon.upgradeCost)},displayArmorStats=()=>{armorLvlEl.innerHTML=armor.level,armorCostEl.innerHTML=addSuffix(armor.upgradeCost)},displayEnemyCounter=()=>counterDisplay.innerHTML=enemyCounter,displayEnemyStats=()=>{enemyDamageText.innerHTML=addSuffix(enemyDMG),enemyGoldText.innerHTML=addSuffix(enemyGold),enemyClassText.innerHTML=enemyClass},updateWaveCounter=()=>{waveNumber++,waveCounterDisplay.innerHTML=waveNumber,waveModifier(world.wave.modifier),enemyCounter=1,displayEnemyCounter()},displayGold=()=>goldDisplay.innerHTML=addSuffix(currentGold),damage=(e,a,n,t)=>{let r=e-a;r<=0?(t(r=0),n()):t(e=r)},damageEnemy=()=>damage(enemyCurrentHP,player.dmg,killEnemy,updateEnemyHealth),damagePlayer=()=>damage(playerHP,enemyDMG,killPlayer,updatePlayerHealth),killEnemy=()=>{let e=enemyBase.goldDrop;const a=eliteModifier(enemyBase);10!==enemyCounter?(enemyCounter++,addGold(e),displayEnemyCounter(),spawnEnemy()):(e=a.goldDrop,addGold(e),stopEnemyAttack(),healPlayer(),toggleShow(nextBtn),playerMessage.innerHTML="Wave Cleared.",toggleResting())},killPlayer=()=>{playerMessage.innerHTML="You died. Gold Lost: "+currentGold,currentGold=0,displayGold(),retreat()};waveCounterDisplay.innerHTML=waveNumber,updateEnemyHealth(enemyBase.hp),updatePlayerHealth(playerHP),displayUpgrades(),displayEnemyCounter(),spawnEnemy(),displayEnemyStats(),regenText.innerHTML=skills.regen.power,midasText.innerHTML=skills.midas.power,auraText.innerHTML=skills.aura.power,regenCost.innerHTML=addSuffix(skills.regen.purchaseCost),midasCost.innerHTML=addSuffix(skills.midas.purchaseCost),auraCost.innerHTML=addSuffix(skills.aura.purchaseCost),enemyHitBox.onclick=(()=>damageEnemy()),weaponUpgrade.onclick=(()=>void upgradeGear(weapon,()=>player.dmg*=2)),armorUpgrade.onclick=(()=>void upgradeGear(armor,()=>(playerMaxHP=Math.round(1.9*playerMaxHP),healPlayer()))),advanceBtn.onclick=(()=>(toggleResting(),toggleShow(advanceBtn),spawnEnemy(),void startEnemyAttack())),nextBtn.onclick=(()=>(updateWaveCounter(),enemyCounter=1,displayEnemyCounter(),playerMessage.innerHTML="",toggleShow(nextBtn),toggleResting(),spawnEnemy(),void startEnemyAttack())),retreatBtn.onclick=(()=>retreat()),buyRegenBtn.onclick=(()=>purchaseSkill(skills.regen)),buyMidasBtn.onclick=(()=>purchaseSkill(skills.midas)),buyAuraBtn.onclick=(()=>purchaseSkill(skills.aura)),upgradeRegenBtn.onclick=(()=>upgradeSkill(skills.regen)),upgradeMidasBtn.onclick=(()=>upgradeSkill(skills.midas)),upgradeAuraBtn.onclick=(()=>upgradeSkill(skills.aura));