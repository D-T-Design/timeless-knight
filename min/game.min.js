const baseStores={player:{hp:50,dmg:1,goldInit:0,gear:{weapon:{level:1,upgradeCost:10,upgradeMod:2},armor:{level:1,upgradeCost:10,upgradeMod:3}}},enemy:{hp:3,dmg:1,goldDrop:30,eliteMod:4,bossMod:3},skills:{regen:{power:10,level:1,upgradeCost:1e3,powerIncrease:1,name:"Regen"},midas:{power:100,level:1,upgradeCost:1e3,powerIncrease:2,name:"Midas"},aura:{power:100,level:1,upgradeCost:1e3,powerIncrease:5,name:"Aura"}},world:{wave:{num:1,perWave:10,modifier:1.5},loop:{num:1,buffInit:{},buffStats:{goldPerMonster:1,dmgModifier:1,waveReduction:.5,dmgReduction:.5,costReduction:1}}}},playerHPBar=document.getElementById("playerHPBar"),playerHPText=document.getElementById("playerCurrentHP"),playerMaxHPText=document.getElementById("playerMaxHP"),playerMessage=document.getElementById("playerMessage"),enemyHitBox=document.getElementById("enemyHitbox"),enemyHPBar=document.getElementById("enemyCurrentHP"),enemyHPText=document.getElementById("enemyHPText"),enemyMaxHPText=document.getElementById("enemyMaxHPText"),enemyGoldText=document.getElementById("enemyGold"),enemyDamageText=document.getElementById("enemyDamage"),enemyClassText=document.getElementById("enemyClass");let campfire_e=document.getElementById("campfire"),enemy_e=document.getElementById("enemy"),advanceBtn=document.getElementById("advance"),retreatBtn=document.getElementById("retreat"),nextBtn=document.getElementById("next");const counterDisplay=document.getElementById("enemyCounter"),waveCounterDisplay=document.getElementById("waveCounter"),goldDisplay=document.getElementById("goldDisplay"),weaponLvlEl=document.getElementById("weaponLvl"),weaponDMGEl=document.getElementById("weaponDMG"),weaponCostEl=document.getElementById("weaponCost"),armorLvlEl=document.getElementById("armorLvl"),armorHPEl=document.getElementById("armorHP"),armorCostEl=document.getElementById("armorCost");let weaponUpgrade=document.getElementById("weaponUpgrade"),armorUpgrade=document.getElementById("armorUpgrade"),player={...baseStores.player},enemyBase={...baseStores.enemy},party={...baseStores.party},world={...baseStores.world},skills={...baseStores.skills},isResting=!0;const weapon=player.gear.weapon,armor=player.gear.armor;let currentGold=player.goldInit,enemyMaxHP=enemyBase.hp,enemyCurrentHP=enemyBase.hp,enemyDMG=enemyBase.dmg,enemyGold=enemyBase.goldDrop,playerHP=player.hp,playerMaxHP=player.hp,waveNumber=world.wave.num,enemyClass="",enemyCounter=1;const addSuffix=a=>{let b=a;if(1e3<=a){const c=Math.floor((""+a).length/3);let d="";for(const b=2;1<=b;b--){d=parseFloat((0==c?a:a/Math.pow(1e3,c)).toPrecision(b));const e=(d+"").replace(/[^a-zA-Z 0-9]+/g,"");if(2>=e.length)break}0!=d%1&&(d=d.toFixed(1)),b=d+["","k","m","b","t","q","qn","sx","sp","o","n","d","ud","dd","td","qd","qnd","sxd","spd","od","nd","v","uv","dv","tv","qv","qnv","sxv","spv","ov","nv","tg"][c]}return b},updateHealth=(a,b,c)=>{"player"===c?playerHP=b:enemyCurrentHP=b;const d={percent:100*(b/a),maxHP:a,newHealth:b};"player"===c?playerHPDisplay(d):enemyHPDisplay(d)},playerHPDisplay=a=>{playerHPBar.style.width=a.percent+"%",playerHPText.innerHTML=addSuffix(a.newHealth),playerMaxHPText.innerHTML=addSuffix(a.maxHP)},enemyHPDisplay=a=>{enemyHPBar.style.width=a.percent+"%",enemyHPText.innerHTML=addSuffix(a.newHealth),enemyMaxHPText.innerHTML=addSuffix(a.maxHP)},updatePlayerHealth=a=>updateHealth(playerMaxHP,a,"player"),updateEnemyHealth=a=>updateHealth(enemyMaxHP,a,"enemy"),healPlayer=()=>updatePlayerHealth(playerMaxHP),toggleResting=()=>{const a=[campfire_e,enemy_e,retreatBtn,enemyHitBox];for(var b of a)toggleShow(b);isResting=!isResting},retreat=()=>{enemyCounter=1,stopEnemyAttack(),toggleShow(advanceBtn),healPlayer(),toggleResting()},advance=()=>{toggleResting(),toggleShow(advanceBtn),spawnEnemy(),startEnemyAttack()},restAtCampfire=()=>{stopEnemyAttack(),healPlayer(),toggleShow(nextBtn),playerMessage.innerHTML="Wave Cleared.",toggleResting()},nextWave=()=>{updateWaveCounter(),enemyCounter=1,updateEnemyCounter(),playerMessage.innerHTML="",toggleShow(nextBtn),toggleResting(),spawnEnemy(),startEnemyAttack()},toggleShow=a=>{a.classList.toggle("show")},spawnEnemy=()=>{setTimeout(()=>{var a=eliteModifier(enemyBase);10==enemyCounter?(enemyCurrentHP=a.hp,enemyMaxHP=enemyCurrentHP,enemyGold=a.goldDrop,enemyDMG=a.dmg,enemyClass="Elite"):(enemyCurrentHP=enemyBase.hp,enemyMaxHP=enemyCurrentHP,enemyGold=enemyBase.goldDrop,enemyDMG=enemyBase.dmg,enemyClass="Minion"),updateEnemyStats(),updateEnemyHealth(enemyCurrentHP)},150)},enemyAttack=()=>{isResting||damagePlayer()};let enemyAttackInterval=setInterval(enemyAttack,2e3),startEnemyAttack=()=>{enemyAttackInterval=setInterval(enemyAttack,2e3)},stopEnemyAttack=()=>{clearInterval(enemyAttackInterval)},eliteModifier=a=>{const b=a.eliteMod;return{hp:a.hp*b,dmg:a.dmg*b,goldDrop:a.goldDrop*b}},waveModifier=a=>{const b={...enemyBase,hp:Math.round(enemyBase.hp*a),dmg:Math.round(enemyBase.dmg*a),goldDrop:Math.round(enemyBase.goldDrop*a)};enemyBase=b},addGold=a=>{currentGold+=a,updateGoldDisplay()},upgradeGear=(a,b)=>{currentGold>=a.upgradeCost&&(currentGold-=a.upgradeCost,a.level++,a.upgradeCost*=a.upgradeMod,b(),upgradeDisplay())},upgradeWeaponDMG=()=>{upgradeGear(weapon,()=>{player.dmg*=2})},upgradeArmorHP=()=>{const a=()=>{playerMaxHP=Math.round(1.9*playerMaxHP),healPlayer()};upgradeGear(armor,a)},upgradeDisplay=()=>{updateGoldDisplay(),updateWeaponStats(),updateArmorStats()},buyRegenBtn=document.getElementById("buyRegenBtn"),buyMidasBtn=document.getElementById("buyMidasBtn"),buyAuraBtn=document.getElementById("buyAuraBtn"),upgradeRegenBtn=document.getElementById("upgradeRegenBtn"),upgradeMidasBtn=document.getElementById("upgradeMidasBtn"),upgradeAuraBtn=document.getElementById("upgradeAuraBtn"),regenCost=document.getElementById("regenCost"),midasCost=document.getElementById("midasCost"),auraCost=document.getElementById("auraCost"),regenBonus=document.getElementById("regenBonus"),midasBonus=document.getElementById("midasBonus"),auraBonus=document.getElementById("auraBonus"),regenUpgradeCost=document.getElementById("regenUpgradeCost"),midasUpgradeCost=document.getElementById("midasUpgradeCost"),auraUpgradeCost=document.getElementById("auraUpgradeCost"),regenText=document.getElementById("regen"),midasText=document.getElementById("midas"),auraText=document.getElementById("aura"),displaySkillEffect=()=>{regenText.innerHTML=skills.regen.power,midasText.innerHTML=skills.midas.power,auraText.innerHTML=skills.aura.power},displaySkillCost=()=>{regenCost.innerHTML=addSuffix(skills.regen.upgradeCost),midasCost.innerHTML=addSuffix(skills.midas.upgradeCost),auraCost.innerHTML=addSuffix(skills.aura.upgradeCost)},purchaseSkill=a=>{const b=a.upgradeCost;currentGold>=b&&(currentGold-=b,updateGoldDisplay(),activateSkill(a.name))},activateSkill=a=>{"Regen"===a?(castSpell("regen",regenEffect),toggleShow(buyRegenBtn),toggleShow(upgradeRegenBtn)):"Aura"===a?(castSpell("aura",auraEffect),toggleShow(buyAuraBtn),toggleShow(upgradeAuraBtn)):"Midas"===a?(castSpell("midas",midasEffect),toggleShow(buyMidasBtn),toggleShow(upgradeMidasBtn)):void 0},regenEffect=()=>!isResting&&playerHP<playerMaxHP&&updatePlayerHealth(playerHP+skills.regen.power),auraEffect=()=>{if(!isResting){const a=enemyCurrentHP-skills.aura.power;0>=a?(enemyCurrentHP=0,updateEnemyHealth(enemyCurrentHP),killEnemy()):updateEnemyHealth(a)}},midasEffect=()=>{if(!isResting){var a=skills.midas.power;addGold(a)}},castSpell=(a,b)=>{clearInterval(a);var a=setInterval(b,1e3)},updateWeaponStats=()=>{weaponLvlEl.innerHTML=weapon.level,weaponDMGEl.innerHTML=addSuffix(player.dmg),weaponCostEl.innerHTML=addSuffix(weapon.upgradeCost)},updateArmorStats=()=>{armorLvlEl.innerHTML=armor.level,armorCostEl.innerHTML=addSuffix(armor.upgradeCost)},updateEnemyCounter=()=>counterDisplay.innerHTML=enemyCounter,updateEnemyStats=()=>{enemyDamageText.innerHTML=addSuffix(enemyDMG),enemyGoldText.innerHTML=addSuffix(enemyGold),enemyClassText.innerHTML=enemyClass},updateWaveCounter=()=>{waveNumber++,waveCounterDisplay.innerHTML=waveNumber,waveModifier(world.wave.modifier),enemyCounter=1,updateEnemyCounter()},updateGoldDisplay=()=>goldDisplay.innerHTML=addSuffix(currentGold),damage=(a,b,c,d)=>{var e=a-b;0>=e?(e=0,d(e),c()):(a=e,d(a))},damageEnemy=()=>damage(enemyCurrentHP,player.dmg,killEnemy,updateEnemyHealth),killEnemy=()=>{let a=enemyBase.goldDrop;const b=eliteModifier(enemyBase);10==enemyCounter?(a=b.goldDrop,addGold(a),restAtCampfire()):(enemyCounter++,addGold(a),updateEnemyCounter(),spawnEnemy())},damagePlayer=()=>damage(playerHP,enemyDMG,killPlayer,updatePlayerHealth),killPlayer=()=>{playerMessage.innerHTML="You died. Gold Lost: "+currentGold,currentGold=0,updateGoldDisplay(),retreat()};updateEnemyCounter(),waveCounterDisplay.innerHTML=waveNumber,updateEnemyHealth(enemyBase.hp),updatePlayerHealth(playerHP),upgradeDisplay(),spawnEnemy(),updateEnemyStats(),displaySkillEffect(),displaySkillCost(),enemyHitBox.onclick=()=>damageEnemy(),weaponUpgrade.onclick=()=>upgradeWeaponDMG(),armorUpgrade.onclick=()=>upgradeArmorHP(),advanceBtn.onclick=()=>advance(),nextBtn.onclick=()=>nextWave(),retreatBtn.onclick=()=>retreat(),buyRegenBtn.onclick=()=>purchaseSkill(skills.regen),buyMidasBtn.onclick=()=>purchaseSkill(skills.midas),buyAuraBtn.onclick=()=>purchaseSkill(skills.aura);